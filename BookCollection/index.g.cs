//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.FSharp.Core;
using WebSharper;
using WebSharper.UI.Next;
using WebSharper.UI.Next.Templating;
using WebSharper.UI.Next.CSharp.Client;
using SDoc = WebSharper.UI.Next.Doc;
using DomElement = WebSharper.JavaScript.Dom.Element;
using DomEvent = WebSharper.JavaScript.Dom.Event;
namespace BookCollection.Template
{
    [JavaScript]
    public class Index
    {
        List<TemplateHole> holes = new List<TemplateHole>();
        public Index Main(Doc x) { holes.Add(TemplateHole.NewElt("main", x)); return this; }
        public Index Main(IEnumerable<Doc> x) { holes.Add(TemplateHole.NewElt("main", SDoc.Concat(x))); return this; }
        public Index Main(string x) { holes.Add(TemplateHole.NewText("main", x)); return this; }
        public Index Main(View<string> x) { holes.Add(TemplateHole.NewTextView("main", x)); return this; }
        public Doc Doc() => Runtime.GetOrLoadTemplate("index", null, FSharpOption<string>.Some("index.html"), "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <title>BookCollection</title>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"Content/BookCollection.css\">\r\n    <script type=\"text/javascript\" src=\"Content/BookCollection.head.js\"></script>\r\n</head>\r\n<body>\r\n    <div id=\"main\" ws-replace=\"Main\" ws-children-template=\"MainTemplate\">\r\n        <div class=\"container-fluid\" style=\"margin-top: 10px\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-heading\">\r\n                            <h3 class=\"panel-title\">New item</h3>\r\n                        </div>\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b><input ws-var=\"Title\" placeholder=\"Title\"></p>\r\n                            <p><b>Author: </b><input ws-var=\"Author\" placeholder=\"Author(s)\"></p>\r\n                            <p><b>Publish date: </b><input type=\"date\" ws-var=\"PublishDate\"></p>\r\n                            <p><b>ISBN: </b><input ws-var=\"ISBN\" placeholder=\"ISBN\"></p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Add\">Add</button>\r\n                            <span>${Message}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h2>Current items: <button ws-onclick=\"Refresh\">Refresh</button></h2>\r\n            <div class=\"row\" ws-hole=\"ListContainer\">\r\n                <div class=\"col-md-3\" ws-template=\"ListItem\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b>${Title}</p>\r\n                            <p><b>Author: </b>${Author}</p>\r\n                            <p><b>Publish date: </b>${PublishDate}</p>\r\n                            <p><b>ISBN: </b>${ISBN}</p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Remove\">Remove</button>\r\n                            <button ws-onclick=\"Edit\">Edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\" ws-template=\"EditListItem\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b><input ws-var=\"Title\" placeholder=\"Title\"></p>\r\n                            <p><b>Author: </b><input ws-var=\"Author\" placeholder=\"Author(s)\"></p>\r\n                            <p><b>Publish date: </b><input type=\"date\" ws-var=\"PublishDate\"></p>\r\n                            <p><b>ISBN: </b><input ws-var=\"ISBN\" placeholder=\"ISBN\"></p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Update\">Update</button>\r\n                            <button ws-onclick=\"Cancel\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <script type=\"text/javascript\" src=\"Content/BookCollection.js\"></script>\r\n</body>\r\n</html>", holes, FSharpOption<string>.Some("index"), ServerLoad.WhenChanged, new Tuple<string, FSharpOption<string>, string>[] {  }, false);
        public class EditListItem
        {
            List<TemplateHole> holes = new List<TemplateHole>();
            public EditListItem Title(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("title", x)); return this; }
            public EditListItem Author(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("author", x)); return this; }
            public EditListItem PublishDate(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("publishdate", x)); return this; }
            public EditListItem ISBN(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("isbn", x)); return this; }
            public EditListItem Update(Action<DomElement, DomEvent> x) { holes.Add(TemplateHole.NewEvent("update", FSharpConvert.Fun<DomElement, DomEvent>(x))); return this; }
            public EditListItem Update(Action x) { holes.Add(TemplateHole.NewEvent("update", FSharpConvert.Fun<DomElement, DomEvent>((a,b) => x()))); return this; }
            public EditListItem Cancel(Action<DomElement, DomEvent> x) { holes.Add(TemplateHole.NewEvent("cancel", FSharpConvert.Fun<DomElement, DomEvent>(x))); return this; }
            public EditListItem Cancel(Action x) { holes.Add(TemplateHole.NewEvent("cancel", FSharpConvert.Fun<DomElement, DomEvent>((a,b) => x()))); return this; }
            public Doc Doc() => Runtime.GetOrLoadTemplate("index", FSharpOption<string>.Some("editlistitem"), FSharpOption<string>.Some("index.html"), "<div class=\"col-md-3\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b><input ws-var=\"Title\" placeholder=\"Title\"></p>\r\n                            <p><b>Author: </b><input ws-var=\"Author\" placeholder=\"Author(s)\"></p>\r\n                            <p><b>Publish date: </b><input type=\"date\" ws-var=\"PublishDate\"></p>\r\n                            <p><b>ISBN: </b><input ws-var=\"ISBN\" placeholder=\"ISBN\"></p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Update\">Update</button>\r\n                            <button ws-onclick=\"Cancel\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>", holes, FSharpOption<string>.Some("index"), ServerLoad.WhenChanged, new Tuple<string, FSharpOption<string>, string>[] {  }, true);
            public Elt Elt() => (Elt)Doc();
        }
        public class ListItem
        {
            List<TemplateHole> holes = new List<TemplateHole>();
            public ListItem Title(string x) { holes.Add(TemplateHole.NewText("title", x)); return this; }
            public ListItem Title(View<string> x) { holes.Add(TemplateHole.NewTextView("title", x)); return this; }
            public ListItem Author(string x) { holes.Add(TemplateHole.NewText("author", x)); return this; }
            public ListItem Author(View<string> x) { holes.Add(TemplateHole.NewTextView("author", x)); return this; }
            public ListItem PublishDate(string x) { holes.Add(TemplateHole.NewText("publishdate", x)); return this; }
            public ListItem PublishDate(View<string> x) { holes.Add(TemplateHole.NewTextView("publishdate", x)); return this; }
            public ListItem ISBN(string x) { holes.Add(TemplateHole.NewText("isbn", x)); return this; }
            public ListItem ISBN(View<string> x) { holes.Add(TemplateHole.NewTextView("isbn", x)); return this; }
            public ListItem Remove(Action<DomElement, DomEvent> x) { holes.Add(TemplateHole.NewEvent("remove", FSharpConvert.Fun<DomElement, DomEvent>(x))); return this; }
            public ListItem Remove(Action x) { holes.Add(TemplateHole.NewEvent("remove", FSharpConvert.Fun<DomElement, DomEvent>((a,b) => x()))); return this; }
            public ListItem Edit(Action<DomElement, DomEvent> x) { holes.Add(TemplateHole.NewEvent("edit", FSharpConvert.Fun<DomElement, DomEvent>(x))); return this; }
            public ListItem Edit(Action x) { holes.Add(TemplateHole.NewEvent("edit", FSharpConvert.Fun<DomElement, DomEvent>((a,b) => x()))); return this; }
            public Doc Doc() => Runtime.GetOrLoadTemplate("index", FSharpOption<string>.Some("listitem"), FSharpOption<string>.Some("index.html"), "<div class=\"col-md-3\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b>${Title}</p>\r\n                            <p><b>Author: </b>${Author}</p>\r\n                            <p><b>Publish date: </b>${PublishDate}</p>\r\n                            <p><b>ISBN: </b>${ISBN}</p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Remove\">Remove</button>\r\n                            <button ws-onclick=\"Edit\">Edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>", holes, FSharpOption<string>.Some("index"), ServerLoad.WhenChanged, new Tuple<string, FSharpOption<string>, string>[] {  }, true);
            public Elt Elt() => (Elt)Doc();
        }
        public class MainTemplate
        {
            List<TemplateHole> holes = new List<TemplateHole>();
            public MainTemplate Title(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("title", x)); return this; }
            public MainTemplate Author(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("author", x)); return this; }
            public MainTemplate PublishDate(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("publishdate", x)); return this; }
            public MainTemplate ISBN(IRef<string> x) { holes.Add(TemplateHole.NewVarStr("isbn", x)); return this; }
            public MainTemplate Add(Action<DomElement, DomEvent> x) { holes.Add(TemplateHole.NewEvent("add", FSharpConvert.Fun<DomElement, DomEvent>(x))); return this; }
            public MainTemplate Add(Action x) { holes.Add(TemplateHole.NewEvent("add", FSharpConvert.Fun<DomElement, DomEvent>((a,b) => x()))); return this; }
            public MainTemplate Message(string x) { holes.Add(TemplateHole.NewText("message", x)); return this; }
            public MainTemplate Message(View<string> x) { holes.Add(TemplateHole.NewTextView("message", x)); return this; }
            public MainTemplate Refresh(Action<DomElement, DomEvent> x) { holes.Add(TemplateHole.NewEvent("refresh", FSharpConvert.Fun<DomElement, DomEvent>(x))); return this; }
            public MainTemplate Refresh(Action x) { holes.Add(TemplateHole.NewEvent("refresh", FSharpConvert.Fun<DomElement, DomEvent>((a,b) => x()))); return this; }
            public MainTemplate ListContainer(Doc x) { holes.Add(TemplateHole.NewElt("listcontainer", x)); return this; }
            public MainTemplate ListContainer(IEnumerable<Doc> x) { holes.Add(TemplateHole.NewElt("listcontainer", SDoc.Concat(x))); return this; }
            public MainTemplate ListContainer(string x) { holes.Add(TemplateHole.NewText("listcontainer", x)); return this; }
            public MainTemplate ListContainer(View<string> x) { holes.Add(TemplateHole.NewTextView("listcontainer", x)); return this; }
            public Doc Doc() => Runtime.GetOrLoadTemplate("index", FSharpOption<string>.Some("maintemplate"), FSharpOption<string>.Some("index.html"), "\r\n        <div class=\"container-fluid\" style=\"margin-top: 10px\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-heading\">\r\n                            <h3 class=\"panel-title\">New item</h3>\r\n                        </div>\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b><input ws-var=\"Title\" placeholder=\"Title\"></p>\r\n                            <p><b>Author: </b><input ws-var=\"Author\" placeholder=\"Author(s)\"></p>\r\n                            <p><b>Publish date: </b><input type=\"date\" ws-var=\"PublishDate\"></p>\r\n                            <p><b>ISBN: </b><input ws-var=\"ISBN\" placeholder=\"ISBN\"></p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Add\">Add</button>\r\n                            <span>${Message}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h2>Current items: <button ws-onclick=\"Refresh\">Refresh</button></h2>\r\n            <div class=\"row\" ws-hole=\"ListContainer\">\r\n                <div class=\"col-md-3\" ws-template=\"ListItem\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b>${Title}</p>\r\n                            <p><b>Author: </b>${Author}</p>\r\n                            <p><b>Publish date: </b>${PublishDate}</p>\r\n                            <p><b>ISBN: </b>${ISBN}</p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Remove\">Remove</button>\r\n                            <button ws-onclick=\"Edit\">Edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\" ws-template=\"EditListItem\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-body\">\r\n                            <p><b>Title: </b><input ws-var=\"Title\" placeholder=\"Title\"></p>\r\n                            <p><b>Author: </b><input ws-var=\"Author\" placeholder=\"Author(s)\"></p>\r\n                            <p><b>Publish date: </b><input type=\"date\" ws-var=\"PublishDate\"></p>\r\n                            <p><b>ISBN: </b><input ws-var=\"ISBN\" placeholder=\"ISBN\"></p>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                            <button ws-onclick=\"Update\">Update</button>\r\n                            <button ws-onclick=\"Cancel\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ", holes, FSharpOption<string>.Some("index"), ServerLoad.WhenChanged, new Tuple<string, FSharpOption<string>, string>[] {  }, false);
        }
    }
}