//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using WebSharper;
using WebSharper.UI.Next;
using WebSharper.UI.Next.CSharp.Client;
using SDoc = WebSharper.UI.Next.Doc;
using CDoc = WebSharper.UI.Next.Client.Doc;
using DomElement = WebSharper.JavaScript.Dom.Element;
using DomEvent = WebSharper.JavaScript.Dom.Event;
using CAttr = WebSharper.UI.Next.Client.Attr;
namespace BookCollection.Template
{
[JavaScript]
public static class Index
{
public static class Main
{
public static Doc Doc(IRef<string> Title, IRef<string> Author, IRef<string> PublishDate, IRef<string> ISBN, Action<DomElement, DomEvent> Add, Action<DomElement, DomEvent> Clear, View<string> Message, Action<DomElement, DomEvent> Refresh, Doc ListContainer) => SDoc.Concat(new[]{ SDoc.TextNode("\n        "), SDoc.Element("div", new[]{ Attr.Create("class", "container-fluid") }, new[]{ SDoc.TextNode("\n            "), SDoc.Element("div", new[]{ Attr.Create("class", "row") }, new[]{ SDoc.TextNode("\n                "), SDoc.Element("div", new[]{ Attr.Create("class", "col-md-6") }, new[]{ SDoc.TextNode("\n                    "), SDoc.Element("div", new[]{ Attr.Create("class", "panel panel-default") }, new[]{ SDoc.TextNode("\n                        "), SDoc.Element("div", new[]{ Attr.Create("class", "panel-heading") }, new[]{ SDoc.TextNode("\n                            "), SDoc.Element("h3", new[]{ Attr.Create("class", "panel-title") }, new[]{ SDoc.TextNode("New item") }), SDoc.TextNode("\n                        ") }), SDoc.TextNode("\n                        "), SDoc.Element("div", new[]{ Attr.Create("class", "panel-body") }, new[]{ SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Title: ") }), CDoc.Input(new[]{ Attr.Create("placeholder", "Title") }, Title) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Author: ") }), CDoc.Input(new[]{ Attr.Create("placeholder", "Author(s)") }, Author) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Publish date: ") }), CDoc.Input(new[]{ Attr.Create("type", "date") }, PublishDate) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("ISBN: ") }), CDoc.Input(new[]{ Attr.Create("placeholder", "ISBN") }, ISBN) }), SDoc.TextNode("\n                        ") }), SDoc.TextNode("\n                        "), SDoc.Element("div", new[]{ Attr.Create("class", "panel-footer") }, new[]{ SDoc.TextNode("\n                            "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Add)) }, new[]{ SDoc.TextNode("Add") }), SDoc.TextNode("\n                            "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Clear)) }, new[]{ SDoc.TextNode("Clear") }), SDoc.TextNode("\n                            "), SDoc.Element("span", Enumerable.Empty<Attr>(), new[]{ CDoc.TextView(Message) }), SDoc.TextNode("\n                        ") }), SDoc.TextNode("\n                    ") }), SDoc.TextNode("\n                ") }), SDoc.TextNode("\n            ") }), SDoc.TextNode("\n            "), SDoc.Element("h2", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Current items: "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Refresh)) }, new[]{ SDoc.TextNode("Refresh") }) }), SDoc.TextNode("\n            "), SDoc.Element("div", new[]{ Attr.Create("class", "row") }, new[]{ ListContainer }), SDoc.TextNode("\n        ") }), SDoc.TextNode("\n    ") });
}
public static class ListItem
{
public static Doc Doc(View<string> Title, View<string> Author, View<string> PublishDate, View<string> ISBN, Action<DomElement, DomEvent> Remove, Action<DomElement, DomEvent> Edit) => SDoc.Concat(new[]{ SDoc.Element("div", new[]{ Attr.Create("class", "col-md-3") }, new[]{ SDoc.TextNode("\n                    "), SDoc.Element("div", new[]{ Attr.Create("class", "panel panel-default") }, new[]{ SDoc.TextNode("\n                        "), SDoc.Element("div", new[]{ Attr.Create("class", "panel-body") }, new[]{ SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Title: ") }), CDoc.TextView(Title) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Author: ") }), CDoc.TextView(Author) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Publish date: ") }), CDoc.TextView(PublishDate) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("ISBN: ") }), CDoc.TextView(ISBN) }), SDoc.TextNode("\n                        ") }), SDoc.TextNode("\n                        "), SDoc.Element("div", new[]{ Attr.Create("class", "panel-footer") }, new[]{ SDoc.TextNode("\n                            "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Remove)) }, new[]{ SDoc.TextNode("Remove") }), SDoc.TextNode("\n                            "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Edit)) }, new[]{ SDoc.TextNode("Edit") }), SDoc.TextNode("\n                        ") }), SDoc.TextNode("\n                    ") }), SDoc.TextNode("\n                ") }) });
}
public static class EditListItem
{
public static Doc Doc(IRef<string> Title, IRef<string> Author, IRef<string> PublishDate, IRef<string> ISBN, Action<DomElement, DomEvent> Update, Action<DomElement, DomEvent> Cancel) => SDoc.Concat(new[]{ SDoc.Element("div", new[]{ Attr.Create("class", "col-md-3") }, new[]{ SDoc.TextNode("\n                    "), SDoc.Element("div", new[]{ Attr.Create("class", "panel panel-default") }, new[]{ SDoc.TextNode("\n                        "), SDoc.Element("div", new[]{ Attr.Create("class", "panel-body") }, new[]{ SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Title: ") }), CDoc.Input(new[]{ Attr.Create("placeholder", "Title") }, Title) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Author: ") }), CDoc.Input(new[]{ Attr.Create("placeholder", "Author(s)") }, Author) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("Publish date: ") }), CDoc.Input(new[]{ Attr.Create("type", "date") }, PublishDate) }), SDoc.TextNode("\n                            "), SDoc.Element("p", Enumerable.Empty<Attr>(), new[]{ SDoc.Element("b", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("ISBN: ") }), CDoc.Input(new[]{ Attr.Create("placeholder", "ISBN") }, ISBN) }), SDoc.TextNode("\n                        ") }), SDoc.TextNode("\n                        "), SDoc.Element("div", new[]{ Attr.Create("class", "panel-footer") }, new[]{ SDoc.TextNode("\n                            "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Update)) }, new[]{ SDoc.TextNode("Update") }), SDoc.TextNode("\n                            "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Cancel)) }, new[]{ SDoc.TextNode("Cancel") }), SDoc.TextNode("\n                        ") }), SDoc.TextNode("\n                    ") }), SDoc.TextNode("\n                ") }) });
}
public static Doc Doc(string PageTitle, Doc Main) => SDoc.Concat(new[]{ SDoc.Element("html", new[]{ Attr.Create("lang", "en") }, new[]{ SDoc.TextNode("\n"), SDoc.Element("head", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("\n    "), SDoc.Element("meta", new[]{ Attr.Create("charset", "utf-8") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n    "), SDoc.Element("meta", new[]{ Attr.Create("name", "viewport"), Attr.Create("content", "width=device-width, initial-scale=1.0") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n    "), SDoc.Element("title", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode(PageTitle) }), SDoc.TextNode("\n    "), SDoc.Element("link", new[]{ Attr.Create("rel", "stylesheet"), Attr.Create("href", "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n    "), SDoc.Element("script", new[]{ Attr.Create("src", "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n") }), SDoc.TextNode("\n"), SDoc.Element("body", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("\n    "), SDoc.Element("h1", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode(PageTitle) }), SDoc.TextNode("\n    "), Main, SDoc.TextNode("\n") }), SDoc.TextNode("\n") }) });
}
}